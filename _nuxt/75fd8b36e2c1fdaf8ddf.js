(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{212:function(t,e,n){"use strict";n(5),n(3),n(2),n(1),n(4),n(46);var r=n(16),o=n(0),c=n(113),d=n(218),l=n(44),f=(n(66),n(67),{props:{role:{type:String,required:!0},wifilist:{type:Array,required:!0},dropdownMessage:{type:String,default:"-- SSID from ESP32 --"},enabled:{type:Boolean,required:!0},validate:{type:Object,required:!0}},data:function(){return{ssid:null,pw:null,ssidId:"ssid".concat(this.role),pwId:"pw".concat(this.role),ssidLabel:this.role+". defined SSID:",pwLabel:this.role+". defined SSID's password:"}},computed:{ssidGetter:function(){return this.$store.getters["get".concat(this.role,"Ssid")]},pwGetter:function(){return this.$store.getters["get".concat(this.role,"Pw")]},ddSsid:{get:function(){return this.wifilist.includes(this.ssid)?this.ssid:null},set:function(t){this.ssid=t}}},watch:{ssidGetter:function(t,e){t!==this.ssid&&(this.ssid=t)},pwGetter:function(t,e){t!==this.pw&&(this.pw=t)}},mounted:function(){var t=this.ssidGetter,e=this.pwGetter;t!==this.ssid&&(this.ssid=t),e!==this.pw&&(this.pw=e)},methods:{pwToggle:function(){var t=this.$refs.pw;"password"===t.querySelector("input").type?(t.querySelector("input").type="text",t.querySelector("i").textContent="visibility"):(t.querySelector("input").type="password",t.querySelector("i").textContent="visibility_off")},passByRef:function(t){var e,n;try{JSON.stringify(t.target.id)}catch(t){e="ssid"}void 0!==e||JSON.stringify(t.target.id).includes("ssid")?(e="ssid",n=this.$refs.ssid):(e="pw",n=this.$refs.pw),this.$store.dispatch("setForm",'{"'.concat(e).concat(this.role,'":"').concat(n.querySelector("input").value,'"}'))}}}),h=n(31),w=Object(h.a)(f,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("b-form-row",[n("b-col",{attrs:{cols:"11"}},[n("b-form-group",{staticClass:"mt-2",attrs:{id:"ssid-group","label-align":"left",label:t.ssidLabel,"label-for":"ssid"}},[n("b-input-group",{ref:"ssid"},[n("b-form-input",{attrs:{id:t.ssidId,disabled:!t.enabled,type:"text",placeholder:"SSID"},on:{blur:t.passByRef},model:{value:t.ssid,callback:function(e){t.ssid=e},expression:"ssid"}}),t._v(" "),n("b-input-group-append",{staticClass:"w-50"},[n("b-form-select",{attrs:{id:t.ssidId+"-select",disabled:!t.enabled,options:t.wifilist},on:{change:t.passByRef},scopedSlots:t._u([{key:"first",fn:function(){return[n("b-form-select-option",{attrs:{value:null,disabled:""}},[t._v("\n                "+t._s(t.dropdownMessage)+"\n              ")])]},proxy:!0}]),model:{value:t.ddSsid,callback:function(e){t.ddSsid=e},expression:"ddSsid"}})],1)],1),t._v(" "),n("div",{attrs:{hidden:!t.enabled}},[n("b-form-invalid-feedback",{attrs:{state:t.validate.ssid,align:"left"}},[t._v("\n          SSID cannot be blank!\n        ")])],1)],1)],1),t._v(" "),n("b-col",{attrs:{cols:"11"}},[n("b-form-group",{staticClass:"mt-2",attrs:{id:"pw-group",label:t.pwLabel,"label-align":"left","label-for":"pw"}},[n("b-input-group",{ref:"pw"},[n("b-form-input",{attrs:{id:t.pwId,type:"password",disabled:!t.enabled,placeholder:"Enter password"},on:{blur:t.passByRef},model:{value:t.pw,callback:function(e){t.pw=e},expression:"pw"}}),t._v(" "),n("b-input-group-append",[n("b-button",{attrs:{id:t.pwId+"Btn",variant:"outline-secondary",disabled:!t.enabled},on:{click:t.pwToggle}},[n("i",{staticClass:"material-icons material-sm-font",attrs:{id:"pwEye"}},[t._v("\n              visibility_off\n            ")])])],1)],1),t._v(" "),n("div",{attrs:{hidden:!t.enabled}},[n("b-form-invalid-feedback",{attrs:{align:"left",state:t.validate.pw}},[t._v("\n          Password cannot be blank!\n        ")])],1)],1)],1)],1)}),[],!1,null,null,null).exports;n(214),n(217);function v(t,data){for(var e=0,i=0;i<data.byteLength;i++)data.setInt8(i,data.getInt8(i)^t.charCodeAt(e)),++e>=t.length&&(e=0);return data}function m(t,e){return e=v(t,e=function(t){for(var e=new ArrayBuffer(t.length),n=new Int8Array(e),i=0,r=t.length;i<r;i++)n[i]=t.charCodeAt(i);return new DataView(e)}(e=JSON.stringify(e))),e=new TextDecoder("windows-1252").decode(e)}function S(object,t){var e=Object.keys(object);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(object);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(object,t).enumerable}))),e.push.apply(e,n)}return e}var y={components:{InputPair:w},mixins:[c.validationMixin],data:function(){return{connectionStatus:"Device is not connected",wifiList:[],dropdownMessage:"-- SSID from ESP32 --",secEnabled:!1}},computed:function(t){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?S(Object(source),!0).forEach((function(e){Object(o.a)(t,e,source[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(source)):S(Object(source)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(source,e))}))}return t}({form:function(){return this.$store.getters.getForm}},Object(l.b)({btStat:function(t){return t.connected},apName:function(t){return t.APName},esp32connected:function(t){return t.apStatus},storedOnDevice:function(t){return t.onDevice}})),watch:{esp32connected:function(t,e){this.notificationHandler()},btStat:function(t,e){!0===t?(this.recieveCredentials(),this.notificationHandler()):(this.dropdownMessage="-- SSID from ESP32 --",this.$store.dispatch("setForm",JSON.stringify({ssidPrim:null,pwPrim:null,ssidSec:null,pwSec:null})),this.$store.dispatch("setOnDevice",JSON.stringify({ssidPrim:null,ssidSec:null})),this.$store.dispatch("setApStatus",-1))}},validations:{form:{ssidPrim:{required:d.required},pwPrim:{required:d.required},ssidSec:{required:d.required},pwSec:{required:d.required}}},mounted:function(){this.btStat&&(this.form.ssidPrim||this.recieveCredentials(),this.recieveWifiList(),this.notificationHandler())},methods:{validateState:function(t){var e=this.$v.form[t],n=e.$dirty,r=e.$error;return n?!r:null},eraseSSIDs:function(){this.$espconfig.writeCredentials(m(this.apName,{erase:""})),this.recieveCredentials()},onSubmit:function(t){this.form.ssidSec||this.form.pwSec||this.secEnabled||(this.$store.dispatch("setForm",'{"ssidSec":"'.concat(this.form.ssidPrim,'","pwSec":"').concat(this.form.pwPrim,'"}')),this.validateState("ssidSec"),this.validateState("pwSec")),this.$v.form.$touch(),this.$v.form.$anyError||(this.$espconfig.writeCredentials(m(this.apName,this.form)),this.recieveCredentials())},onReset:function(){var t=this;this.show=!1,this.$nextTick((function(){t.show=!0})),this.$espconfig.writeCredentials(m(this.apName,{reset:""}))},recieveCredentials:function(){var t=this;return Object(r.a)(regeneratorRuntime.mark((function e(){var n,r,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=new TextDecoder("windows-1252"),e.next=3,t.$espconfig.readCredentials();case 3:return o=e.sent,n=v(t.apName,o),n=r.decode(n),t.$store.dispatch("setForm",n),t.$store.dispatch("setOnDevice",n),e.next=10,t.recieveWifiList();case 10:if(!t.$espconfig.connectionStatusUuid){e.next=13;break}return e.next=13,t.$espconfig.startConnectionstatusNotifications((function(e){t.$store.dispatch("setApStatus",e.target.value.getUint8())}));case 13:case"end":return e.stop()}}),e)})))()},recieveWifiList:function(){var t=this;return Object(r.a)(regeneratorRuntime.mark((function e(){var n,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.$espconfig.ssidListUuid){e.next=18;break}return n=new TextDecoder("windows-1252"),t.dropdownMessage="Updating SSIDs from device...",e.next=5,t.$espconfig.readSsidlist();case 5:if(r=e.sent,console.log(r),!r){e.next=17;break}return t.dropdownMessage="SSID seen by device",r=n.decode(r),console.log(r),r=JSON.parse(r),console.log(r),t.wifiList=r.SSID,e.abrupt("return",r);case 17:t.dropdownMessage="-- SSID from ESP32 --";case 18:case"end":return e.stop()}}),e)})))()},notificationHandler:function(){var t=this;-1===this.esp32connected?this.connectionStatus="Your device does not support connection status reporting":0===this.esp32connected?this.connectionStatus="ESP32 is not connected to WiFi AP":this.storedOnDevice.ssidPrim||this.storedOnDevice.ssidSec?1===this.esp32connected?this.connectionStatus="ESP32 connected to ".concat(this.storedOnDevice.ssidPrim):2===this.esp32connected&&(this.connectionStatus="ESP32 connected to ".concat(this.storedOnDevice.ssidSec)):setTimeout((function(){t.notificationHandler()}),250)}}},_=Object(h.a)(y,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("b-row",{attrs:{"align-h":"start"}},[n("b-col",{attrs:{col:"",cols:"11"}},[n("b-alert",{attrs:{show:"",variant:"info"}},[n("b-row",[n("b-col",[t.btStat?n("span",[t._v("\n              "+t._s(t.connectionStatus)+"\n            ")]):n("span",[t._v("\n              Waiting for connection...\n            ")])]),t._v(" "),n("b-col",{attrs:{col:"",cols:"1"}},[n("b-link",{attrs:{hidden:!t.btStat},on:{click:t.recieveCredentials}},[n("i",{staticClass:"material-icons material-sm-font"},[t._v("\n                refresh\n              ")])])],1)],1)],1)],1)],1),t._v(" "),n("b-form",{staticClass:"row needs-validation",attrs:{id:"my-form",method:"POST",novalidate:""},on:{submit:function(e){return e.preventDefault(),t.onSubmit(e)},reset:function(e){return e.preventDefault(),t.onReset(e)}}},[n("InputPair",{ref:"Prim",attrs:{role:"Prim",wifilist:t.wifiList,"dropdown-message":t.dropdownMessage,enabled:t.btStat,validate:{ssid:t.validateState("ssidPrim"),pw:t.validateState("pwPrim")}}}),t._v(" "),n("b-form-row",[n("b-form-checkbox",{staticClass:"ml-2",attrs:{id:"checkbox-1",disabled:!t.btStat,name:"checkbox-1",switch:""},model:{value:t.secEnabled,callback:function(e){t.secEnabled=e},expression:"secEnabled"}},[t._v("\n        Configure Secondary SSID\n      ")])],1),t._v(" "),n("InputPair",{ref:"Sec",attrs:{role:"Sec",wifilist:t.wifiList,"dropdown-message":t.dropdownMessage,enabled:t.secEnabled&&t.btStat,validate:{ssid:t.validateState("ssidSec"),pw:t.validateState("pwSec")}}}),t._v(" "),n("b-col",{attrs:{cols:"11"}},[n("b-button",{attrs:{id:"setSSIDs",type:"submit",variant:"primary",disabled:!t.btStat}},[t._v("\n        Configure device\n      ")]),t._v(" "),n("b-button",{attrs:{id:"eraseSSIDs",variant:"secondary",disabled:!t.btStat},on:{click:t.eraseSSIDs}},[t._v("\n        Erase\n      ")]),t._v(" "),n("b-button",{attrs:{id:"resetSSIDs",type:"reset",variant:"secondary",disabled:!t.btStat}},[t._v("\n        Reset\n      ")])],1)],1)],1)}),[],!1,null,null,null);e.a=_.exports},213:function(t,e,n){"use strict";var r=n(31),component=Object(r.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this.$createElement,e=this._self._c||t;return e("div",[e("p",[this._v("\n    This web app is intended for configuring WiFi credentials of headless IoT\n    devices over Bluetooth LE."),e("br"),this._v("\n    Since the web-bluetooth specification is not finalized yet, only Google\n    Chrome was validated to work on Mac OSX, Win 10, Android 9, and Ubuntu\n    Linux (with some modifications)."),e("br")]),this._v(" "),e("p",[this._v("\n    To use or test this app you will need a ESP32 dev board which will run a\n    matching application.\n  ")]),this._v(" "),e("p",[this._v("\n    The app allows setting only of password protected Access Points, since it\n    was built to complement an existing code base for the Arduino platform."),e("br"),this._v("\n    The ESP32 works only with 2.4 GHz WiFi, so APs set on other frequencies (5\n    GHz, soon 6 GHz) will not be displayed when used in conjunction with ESP32\n    based devices.\n  ")])])}],!1,null,null,null);e.a=component.exports},246:function(t,e,n){"use strict";n.r(e);var r=n(213),o=n(212),c={components:{Descript:r.a,Config:o.a},data:function(){return{dismissSecs:60,dismissCountDown:60}},methods:{countDownChanged:function(t){this.dismissCountDown=t}}},d=n(31),component=Object(d.a)(c,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("b-row",[n("b-alert",{staticStyle:{width:"93%"},attrs:{show:t.dismissCountDown,dismissible:""},on:{dismissed:function(e){t.dismissCountDown=0},"dismiss-count-down":t.countDownChanged}},[n("descript"),t._v(" "),n("p",[t._v("\n        A sample application and a more in-depth description can be found in\n        the\n        "),n("nuxt-link",{attrs:{to:"about"}},[t._v("About")]),t._v(" page.\n      ")],1),t._v(" "),n("p",[t._v("This alert will dismiss after "+t._s(t.dismissCountDown)+" seconds...")]),t._v(" "),n("b-progress",{attrs:{variant:"alert",max:t.dismissSecs,value:t.dismissCountDown,height:"4px"}})],1)],1),t._v(" "),n("config")],1)}),[],!1,null,null,null);e.default=component.exports}}]);